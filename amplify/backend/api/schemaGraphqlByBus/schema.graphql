type AgencySubscription @model @auth(rules:[
  {allow: public, provider: iam, operations: [create, read]},
  {allow: private, provider: iam,operations: [read]}
  {allow: groups, groups:["admin"], operations: [update, read, delete]}
]){
  id: ID!
  name: String!
  rif: String! @index(name: "agencySubscriptionbyRif", queryField: "getAgencySubscriptionbyRif")
  email: String! @index(name: "agencySubscriptionbyEmail", queryField: "getAgencySubscriptionbyEmail")
  phone: String!
  subscriptionDate: String 
  status: SusbcriptionStatus @default(value: "PENDING")
  scheduledDate: String 
}

type EmailSusbcription @model @auth(rules:[
  {allow: public, provider: iam, operations:[create, read]}
  {allow: groups, groups:["admin"], operations:[read, delete]}
]){
  id: ID!
  email: String! @index(name: "emailSubscriptionbyEmail", queryField: "getEmailSubscriptionbyEmail")
}

enum SusbcriptionStatus{
  PENDING
  ACCEPTED
  REJECTED
  SCHEDULED
}

# type ADProduct @model @auth(rules: [
#   { allow: groups, groups: ["admin"] },
#   { allow: private, provider: iam, operations: [read] },
#   { allow: public, provider: iam, operations: [read] },
#    {allow: private, operations:[read]}
#   ]) {
#   id: ID!
#   name: String @auth(rules:[
#     { allow: groups, groups: ["admin"] },
#     { allow: private, provider: iam, operations: [read] },
#     { allow: public, provider: iam, operations: [read] },
#     {allow: private, operations:[read]}
#   ])
#   images: [String]
#   paths: [String]
#   description: String
#   suggestedPrice: Float
#   categoryID: ID @index(name: "byCategory", sortKeyFields: ["name"])
#   brandID: ID @index(name: "byBrand", sortKeyFields: ["name"])
#   phone: GuidePhone 
#   createdBy: ID @auth(rules:[
#     {allow: groups, groups:["admin"], operations:[read, create, delete]}
#   ])
#   customerProduct: [CustomerProduct] @hasMany(indexName:"byADProductCustomerProduct", fields: ["id"])
# } 